%h1 Введение в Rspec
%p Добавим джемы:
%pre
  :preserve

    group :development, :test do
      gem 'rspec-rails', '~> 3.6'
      gem 'factory_girl_rails'
    end
%p
  %q
    %u $ rails g rspec:install
%p
  Спецификация RSpec обычно генерируется вместе с другими компонентами приложения.
  Например, рельсы, генерирующие модель, также будут генерировать спецификационный файл RSpec
  для модели. Если же модель сгенерировали до установки Rspec, то можно отдельно сгенерировать
  файлы для тестов:
%p
  %q
    %u $ rails generate rspec:model widget
%p Что создаст новый файл:  spec/models/widget_spec.rb.
%p Та же модель генератора доступна для всех спецификаций:
%pre
  :preserve

    scaffold
    model
    controller
    helper
    view
    mailer
    observer
    integration
    feature
    job

%p
  %h3 Простые тесты валидации модели
%p
  %pre
    :preserve
      require 'rails_helper'

      RSpec.describe Counterparty, type: :model do
        it 'validates presence of groups_counterparty_id not valid without name' do
          expect(Counterparty.new(groups_counterparty_id: 1)).to_not be_valid
        end

        it 'validates presence of name not valid without groups_counterparty_id' do
          expect(Counterparty.new(name: '1')).to_not be_valid
        end

        it 'vailidates presence of true' do
          gc = GroupsCounterparty.create(name: 'qqq')
          expect(Counterparty.new(name: 'onename', groups_counterparty_id: gc.id)).to be_valid
        end

      end
%p
  %pre
    :preserve
      $ rspec spec/models/counterparty_spec.rb

      Counterparty
        validates presence of groups_counterparty_id not valid without name
        validates presence of name not valid without groups_counterparty_id
        vailidates presence of true

      Finished in 0.06926 seconds (files took 2.67 seconds to load)
      3 examples, 0 failures

%h3.bottom0 Тестирование контроллеров
%em (для лучшего понимания процесса)

%p добавляем джем: gem 'rails-controller-testing'
чтобы не генерировались лишние тесты добавляем конфигурацию в config/application.rb
%pre
  :preserve

    config.generators do |g|
      g.test_framework :rspec,
                      fixtures: true,
                      view_spec: false,
                      helper_specs: false,
                      routing_specs: false,
                      request_specs: false,
                      controller_spec: true
      g.fixture_replacement :factory_girl, dir: 'spec/factories'
    end


%p Добавить в rails-helper.rb
config.include FactoryGirl::Syntax::Methods
%p
%p Если не был сгенерирован файл тестов, то генерируем:
%q
  %u $ rails generate rspec:controller goods


%p
  вот полное содержание с уже написанным тестом в сгенерированном файле:
  %pre
    :preserve
      require 'rails_helper'

      RSpec.describe QuestionsController, type: :controller do
        describe 'Get #index' do
          let(:questions) {create_list(:question, 2)}

          before do
            get :index
          end

          it 'array of all questions' do
            expect(assigns(:questions)).to match_array(@questions)
          end

          it 'renders index view' do
            expect(response).to render_template :index
          end
        end

      end
  %pre
    :preserve

      $ rspec spec/controllers/goods_controller_spec.rb

      GoodsController
        Get #index
          array of all qoods
          renders index view

      Finished in 0.03217 seconds (files took 2.71 seconds to load)
      2 examples, 0 failures
