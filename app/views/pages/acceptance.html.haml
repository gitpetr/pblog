%h1 Интеграционные тесты
%p gem 'capybara'
%p mkdir spec/features
%p touch spec/features/sign_in_spec.rb spec/features/sign_in_spec.rb
%p
%p
  spec/factory/users.rb
  %pre
    :preserve
      FactoryGirl.define do
        sequence :email do |n|
          "user\#{n}@test.com"
        end

        sequence :username do |n|
          "myusername\#{n}"
        end

        factory :user do
          username
          email
          password '123456'
          password_confirmation '123456'
        end
      end
%p
  %b rspec/support/acceptance_macros.rb
  %pre
    :preserve
      module AcceptanceMacros
        def sign_in(user)
          visit new_user_session_path
          fill_in 'Логин', with: user.email
          fill_in 'Пароль', with: user.password #'123456'
          click_on 'Вход', class: 'btn btn-primary'
        end
      end
  %b rails_helper.rb
  %pre
    :preserve
      Dir[Rails.root.join('spec/support/**/*.rb')].each { |f| require f }

      # Checks for pending migration and applies them before tests are run.
      # If you are not using ActiveRecord, you can remove this line.
      ActiveRecord::Migration.maintain_test_schema!

      RSpec.configure do |config|
        # Remove this line if you're not using ActiveRecord or ActiveRecord fixtures
        config.fixture_path = "#{::Rails.root}/spec/fixtures"
        config.include FactoryGirl::Syntax::Methods
        config.include Devise::TestHelpers, type: :controller
        config.extend ControllerMacros, type: :controller
        config.include AcceptanceMacros, type: :feature
  %u sign_in_spec.rb
  %pre
    :preserve
      require 'rails_helper'
      feature 'Siging in', %q{
        As an user
        I want be able to sign in
        } do

          given(:user) { create(:user) }

          scenario "Existing user try to sign in" do
            sign_in(user)
            expect(page).to have_content 'Ваш интернет магазин'
            expect(current_path).to eq root_path
          end

          scenario 'Non-existing user try to sign in' do
            visit new_user_session_path
            fill_in 'Логин', with: 'user1@test.com'
            fill_in 'Пароль', with: '1234567'
            # save_and_open_page
            click_on 'Вход', class: 'btn btn-primary'
            expect(page).to have_content "Забыли пароль?"
          end
      end


%p
  %pre
    :preserve
      $ rspec spec/features/sign_in_spec.rb

      2 examples, 0 failures

%p
  %u rspec/features/create_good_spec.rb
%p
  %pre
    :preserve
      require 'rails_helper'

      feature 'Create good', %q{
        As an authenticated user
        I want to be able to create good
      } do

        given(:user) { create(:user) }

        scenario 'Authenticated user create the good' do
          sign_in(user)

          visit '/goods'
          # save_and_open_page
          click_on 'Новый'
          fill_in 'Название', with: 'Test good'
          fill_in 'Описание', with: 'text text text'
          click_on 'Сохранить'

          expect(page).to have_content 'Номенклатура'
        end

        scenario 'Non-authenticated user try to create good' do
          visit '/goods'
          expect(page.has_no_button?('Новый')).to be true
          visit '/goods/new'
          expect(page).to have_content 'Регистрация Забыли пароль?'
        end
      end



